# ~/.zshrc - Loaded by zsh for interactive shells only
# Runs AFTER .zshenv and .zprofile (if login shell)
# Use this for:
#   - Aliases and functions
#   - Key bindings
#   - Prompt configuration
#   - Completion settings
#   - Interactive shell features
# Note: Keep non-interactive settings in .zshenv or .zprofile

export ZSH="$HOME/.oh-my-zsh"

ZSH_CUSTOM="$HOME/.zsh_custom"
ZSH_THEME="eanderson"


CASE_SENSITIVE="true"
DISABLE_AUTO_UPDATE="true"
COMPLETION_WAITING_DOTS="true"
HIST_STAMPS="yyyy-mm-dd"

# NOTE TO SELF. DO NOT use `git-prompt` as it breaks cline in vscode
plugins=(brew chezmoi git direnv bun gh jump nodenv)


source $ZSH/oh-my-zsh.sh

# User configuration

export LANG=en_US.UTF-8

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

{{- if eq .chezmoi.os "darwin" }}
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        path+=("/opt/homebrew/Caskroom/miniconda/base/bin")
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
{{ end }}



# alias claude="$HOME/.claude/local/claude"

# Source 1Password plugins if available
if [ -f $HOME/.config/op/plugins.sh ]; then
    source $HOME/.config/op/plugins.sh
fi

# bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# nvm (Node Version Manager)
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# We need this last so claude can be found
export PATH="$HOME/.local/bin:$PATH"

# Show MOTD on login (throttled to once per day)
show_motd_on_login() {
    # Only show MOTD for interactive login shells
    if [[ $- == *i* ]] && [[ -n "$SSH_CONNECTION" || "$TERM_PROGRAM" == "Apple_Terminal" || "$TERM_PROGRAM" == "iTerm.app" ]]; then
        # Throttle to once per day
        local motd_cache="$HOME/.config/last_motd"
        local today=$(date '+%Y-%m-%d')
        
        if [[ ! -f "$motd_cache" ]] || [[ "$(cat "$motd_cache" 2>/dev/null)" != "$today" ]]; then
            motd
            echo "$today" > "$motd_cache"
        fi
    fi
}

# Alias to manually show MOTD
alias motd='$HOME/bin/motd'

# Call the function to show MOTD on login
show_motd_on_login

# Auto-attach to tmux session on SSH login
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ] && [ -n "$SSH_CONNECTION" ] && [ -z "$VSCODE_IPC_HOOK_CLI" ]; then
  # Try to attach to existing session, or create new one
  tmux attach-session -t default || tmux new-session -s default
fi

# Periodic git status refresh in prompt
# This will automatically refresh the git status in your prompt without requiring a new command

# Make sure we have the required zsh functions
autoload -Uz add-zsh-hook

function refresh_git_prompt() {
  # Only run if we're in a git repo
  if git rev-parse --is-inside-work-tree &>/dev/null; then
    # Force prompt redraw
    zle reset-prompt
  fi
}

# Create a widget from our function
zle -N refresh_git_prompt

# Set up a periodic refresh (every 10 seconds)
PERIODIC_REFRESH_INTERVAL=10 # seconds
if [[ -z "$VSCODE_IPC_HOOK_CLI" ]]; then  # Don't run in VSCode terminal
  function periodic_refresh() {
    (( PERIODIC_REFRESH_COUNT++ ))
    if (( PERIODIC_REFRESH_COUNT >= PERIODIC_REFRESH_INTERVAL )); then
      PERIODIC_REFRESH_COUNT=0
      zle refresh_git_prompt
    fi
  }
  PERIODIC_REFRESH_COUNT=0
  add-zsh-hook precmd periodic_refresh
fi

# Manual refresh with Ctrl+G
bindkey '^g' refresh_git_prompt
